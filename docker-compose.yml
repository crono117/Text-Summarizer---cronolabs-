version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: summasaas_db
    environment:
      POSTGRES_DB: summasaas
      POSTGRES_USER: summasaas_user
      POSTGRES_PASSWORD: summasaas_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U summasaas_user -d summasaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: summasaas_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: summasaas_web
    command: python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://summasaas_user:summasaas_dev_password@db:5432/summasaas
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: summasaas_worker
    command: sh -c "cd src && celery -A core worker -l info"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://summasaas_user:summasaas_dev_password@db:5432/summasaas
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: summasaas_beat
    command: sh -c "cd src && celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://summasaas_user:summasaas_dev_password@db:5432/summasaas
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
